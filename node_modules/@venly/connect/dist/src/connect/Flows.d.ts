import { Account } from '../models/Account';
import { AuthenticationOptions, AuthenticationResult, VenlyConnect } from './connect';
import { PopupResult } from '../popup/PopupResult';
import { SecretType } from '../models/SecretType';
import { WindowMode } from '../models/WindowMode';
export declare class Flows {
    private clientId;
    private connect;
    constructor(venlyConnect: VenlyConnect, clientId: string);
    authenticate(options?: AuthenticationOptions): Promise<AuthenticationResult>;
    manageWallets(chain: string, options?: {
        redirectUri?: string;
        correlationID?: string;
        windowMode?: WindowMode;
        useOverlayWithPopup?: boolean;
    }): Promise<PopupResult | void>;
    linkWallets(options?: {
        redirectUri?: string;
        correlationID?: string;
        windowMode?: WindowMode;
        useOverlayWithPopup?: boolean;
    }): Promise<PopupResult | void>;
    claimWallets(options?: {
        redirectUri?: string;
        correlationID?: string;
        windowMode?: WindowMode;
        useOverlayWithPopup?: boolean;
    }): Promise<PopupResult | void>;
    getAccount(chain: SecretType, options?: {
        idpHint?: string;
    }): Promise<Account>;
    private manageWalletsRedirect;
    private manageWalletsPopup;
    private linkWalletsRedirect;
    private linkWalletsPopup;
    private claimWalletsRedirect;
    private claimWalletsPopup;
}
